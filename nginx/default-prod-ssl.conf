# Redirects HTTP traffic to HTTPS
server {
    # Listens for HTTP traffic on port 80
    listen 80;

    # Replace test4tutorial.work with your actual domain
    server_name test4tutorial.work www.test4tutorial.work;

    # Hides Nginx version info for security
    server_tokens off;

    # Handles Let's Encrypt requests for SSL verification
    location /.well-known/acme-challenge/ {
        # Allows all traffic to this location
        allow all;

        # Serves the challenge files from this directory
        root /var/www/certbot;
    }

    # Redirects all traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Redirects traffic from www.test4tutorial.work to test4tutorial.work over HTTPS
server {
    # Listens for HTTPS traffic on port 443
    listen 443 ssl;

    # Redirects requests to the non-www version of the domain
    server_name www.test4tutorial.work;

    # SSL certificate and key paths generated by Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/test4tutorial.work/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test4tutorial.work/privkey.pem;

    # Includes SSL configuration provided by Let's Encrypt
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Redirects requests to the non-www domain
    return 301 https://test4tutorial.work$request_uri;
}

# Handles HTTPS traffic for test4tutorial.work
server {
    # Listens for HTTPS traffic on port 443
    listen 443 ssl;

    # Replace test4tutorial.work with your actual domain
    server_name test4tutorial.work;

    # SSL certificate and key paths generated by Let's Encrypt, and Replace test4tutorial.work with your actual domain
    ssl_certificate /etc/letsencrypt/live/test4tutorial.work/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test4tutorial.work/privkey.pem;

    # Includes SSL configuration provided by Let's Encrypt
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Specifies the root directory for static and HTML files
    root /var/www/app;
    index index.html;

    # Custom 404 error page
    error_page 404 /404.html;

    # Includes Gzip compression configuration
    include /etc/nginx/conf.d/gzip.conf;

    # Serves static files (CSS, JS, images, etc.) from the /static/ folder
    location /static/ {
        alias /var/www/app/static;
    }

    # Configures long-term caching for images
    location ~* \.(gif|jpe?g|png|svg)$ {
        expires max;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Configures no-cache headers for CSS, JS, and JSON files
    location ~* \.(css|js|json)$ {
        add_header Cache-Control "no-cache, must-revalidate";
    }

    # Serves requested files or falls back to a 404 error
    location / {
        try_files $uri $uri.html $uri/ /404.html;
    }
}